"use strict";(self.webpackChunkcouchbase_haystack=self.webpackChunkcouchbase_haystack||[]).push([[17],{7163:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>d});var i=n(4848),s=n(8453);const c={id:"authentication",title:"Authentication"},a=void 0,r={id:"reference/authentication",title:"Authentication",description:"Classes",source:"@site/docs/reference/authentication.md",sourceDirName:"reference",slug:"/reference/authentication",permalink:"/couchbase-haystack/reference/authentication",draft:!1,unlisted:!1,editUrl:"https://github.com/Couchbase-Ecosystem/couchbase-haystack/docs/reference/authentication.md",tags:[],version:"current",frontMatter:{id:"authentication",title:"Authentication"},sidebar:"tutorialSidebar",previous:{title:"ClusterOptions",permalink:"/couchbase-haystack/reference/cluster_options"}},o={},d=[{value:"Classes",id:"classes",level:2},{value:"<code>CouchbaseAuthenticator</code>",id:"couchbaseauthenticator",level:3},{value:"Methods",id:"methods",level:4},{value:"<code>CouchbasePasswordAuthenticator</code>",id:"couchbasepasswordauthenticator",level:3},{value:"<code>__init__</code>",id:"__init__",level:4},{value:"<code>get_cb_auth</code>",id:"get_cb_auth",level:4},{value:"<code>to_dict</code>",id:"to_dict",level:4},{value:"<code>from_dict</code>",id:"from_dict",level:4},{value:"<code>CouchbaseCertificateAuthenticator</code>",id:"couchbasecertificateauthenticator",level:3},{value:"<code>__init__</code>",id:"__init__-1",level:4},{value:"<code>get_cb_auth</code>",id:"get_cb_auth-1",level:4},{value:"<code>to_dict</code>",id:"to_dict-1",level:4},{value:"<code>from_dict</code>",id:"from_dict-1",level:4},{value:"Serialization and Deserialization",id:"serialization-and-deserialization",level:2}];function h(e){const t={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"classes",children:"Classes"}),"\n",(0,i.jsx)(t.h3,{id:"couchbaseauthenticator",children:(0,i.jsx)(t.code,{children:"CouchbaseAuthenticator"})}),"\n",(0,i.jsx)(t.p,{children:"This is an abstract base class that should be inherited by specific Couchbase authenticator implementations."}),"\n",(0,i.jsx)(t.h4,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"get_cb_auth() -> Union[PasswordAuthenticator, CertificateAuthenticator]"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Description"}),": This method is intended to be implemented by subclasses to return the appropriate Couchbase authenticator."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Raises"}),": ",(0,i.jsx)(t.code,{children:"NotImplementedError"})," if called directly on ",(0,i.jsx)(t.code,{children:"CouchbaseAuthenticator"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"couchbasepasswordauthenticator",children:(0,i.jsx)(t.code,{children:"CouchbasePasswordAuthenticator"})}),"\n",(0,i.jsx)(t.p,{children:"This class handles password-based authentication for Couchbase."}),"\n",(0,i.jsx)(t.h4,{id:"__init__",children:(0,i.jsx)(t.code,{children:"__init__"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'def __init__(\n    self,\n    username: Secret = Secret.from_env_var("CB_USERNAME"),\n    password: Secret = Secret.from_env_var("CB_PASSWORD"),\n    cert_path: Optional[str] = None,\n    **kwargs: Dict[str, Any],\n)\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Input Parameters:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"username"})," (Secret): The username used for authentication, typically fetched from an environment variable."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"password"})," (Secret): The password used for authentication, also typically fetched from an environment variable."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"cert_path"})," (Optional[str]): The path to the certificate trust store (if applicable)."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"kwargs"})," (Dict[str, Any]): Additional parameters that can be passed during initialization."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'auth = CouchbasePasswordAuthenticator(\n    username=Secret.from_env_var("my_username"),\n    password=Secret.from_env_var("my_password"),\n    cert_path="/path/to/cert"\n)\n'})}),"\n",(0,i.jsx)(t.h4,{id:"get_cb_auth",children:(0,i.jsx)(t.code,{children:"get_cb_auth"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def get_cb_auth() -> PasswordAuthenticator\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns an instance of ",(0,i.jsx)(t.code,{children:"PasswordAuthenticator"})," initialized with the provided username, password, and optional certificate path."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"couchbase_auth = auth.get_cb_auth()\n"})}),"\n",(0,i.jsx)(t.h4,{id:"to_dict",children:(0,i.jsx)(t.code,{children:"to_dict"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def to_dict() -> Dict[str, Any]\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns a dictionary containing the serialized state of the ",(0,i.jsx)(t.code,{children:"CouchbasePasswordAuthenticator"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"serialized_auth = auth.to_dict()\n"})}),"\n",(0,i.jsx)(t.h4,{id:"from_dict",children:(0,i.jsx)(t.code,{children:"from_dict"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'@classmethod\ndef from_dict(cls, data: Dict[str, Any]) -> "CouchbasePasswordAuthenticator"\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Input Parameters:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"data"})," (Dict[str, Any]): A dictionary containing the serialized state of a ",(0,i.jsx)(t.code,{children:"CouchbasePasswordAuthenticator"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns a ",(0,i.jsx)(t.code,{children:"CouchbasePasswordAuthenticator"})," instance reconstructed from the provided dictionary."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"auth_instance = CouchbasePasswordAuthenticator.from_dict(serialized_auth)\n"})}),"\n",(0,i.jsx)(t.h3,{id:"couchbasecertificateauthenticator",children:(0,i.jsx)(t.code,{children:"CouchbaseCertificateAuthenticator"})}),"\n",(0,i.jsx)(t.p,{children:"This class handles certificate-based authentication for Couchbase."}),"\n",(0,i.jsx)(t.h4,{id:"__init__-1",children:(0,i.jsx)(t.code,{children:"__init__"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def __init__(\n    self,\n    cert_path: Optional[str] = None,\n    key_path: Optional[str] = None,\n    trust_store_path: Optional[str] = None,\n)\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Input Parameters:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"cert_path"})," (Optional[str]): The path to the client certificate."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"key_path"})," (Optional[str]): The path to the client key."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"trust_store_path"})," (Optional[str]): The path to the trust store containing trusted CA certificates."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'auth = CouchbaseCertificateAuthenticator(\n    cert_path="/path/to/cert.pem",\n    key_path="/path/to/key.pem",\n    trust_store_path="/path/to/truststore.pem"\n)\n'})}),"\n",(0,i.jsx)(t.h4,{id:"get_cb_auth-1",children:(0,i.jsx)(t.code,{children:"get_cb_auth"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def get_cb_auth() -> CertificateAuthenticator\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns an instance of ",(0,i.jsx)(t.code,{children:"CertificateAuthenticator"})," initialized with the provided certificate path, key path, and trust store path."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"couchbase_auth = auth.get_cb_auth()\n"})}),"\n",(0,i.jsx)(t.h4,{id:"to_dict-1",children:(0,i.jsx)(t.code,{children:"to_dict"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"def to_dict() -> Dict[str, Any]\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns a dictionary containing the serialized state of the ",(0,i.jsx)(t.code,{children:"CouchbaseCertificateAuthenticator"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"serialized_auth = auth.to_dict()\n"})}),"\n",(0,i.jsx)(t.h4,{id:"from_dict-1",children:(0,i.jsx)(t.code,{children:"from_dict"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:'@classmethod\ndef from_dict(cls, data: Dict[str, Any]) -> "CouchbaseCertificateAuthenticator"\n'})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Input Parameters:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"data"})," (Dict[str, Any]): A dictionary containing the serialized state of a ",(0,i.jsx)(t.code,{children:"CouchbaseCertificateAuthenticator"}),"."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Response:"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Returns a ",(0,i.jsx)(t.code,{children:"CouchbaseCertificateAuthenticator"})," instance reconstructed from the provided dictionary."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"Example Usage:"})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-python",children:"auth_instance = CouchbaseCertificateAuthenticator.from_dict(serialized_auth)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"serialization-and-deserialization",children:"Serialization and Deserialization"}),"\n",(0,i.jsxs)(t.p,{children:["Both ",(0,i.jsx)(t.code,{children:"CouchbasePasswordAuthenticator"})," and ",(0,i.jsx)(t.code,{children:"CouchbaseCertificateAuthenticator"})," support serialization to a dictionary and deserialization from a dictionary. This is useful for saving the state of an authenticator and restoring it later."]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},c=i.createContext(s);function a(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);